{"version":3,"sources":["src/index.es6"],"names":[],"mappings":"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","file":"src/index.es6","sourcesContent":["/* index.js */\n\nconst http = require('http');\nconst fs = require('fs');\nconst url = require('url');\nconst port = process.argv[2] || 8888;\n\nlet latestData = {};\n\nconst routes = {\n\tlog(req, res) {\n\t\tif (req.method === 'POST') {\n\t\t\tconst log = fs.createWriteStream('./log', { flags: 'a' });\n\n\t\t\treq.pipe(log, { end: false })\n\t\t\t\t.on('end', () => {\n\t\t\t\tres.writeHead(200, \"OK\", {'Content-Type': 'text/plain'});\n\t\t\t\tres.end();\n\t\t\t\tlog.end('\\n');\n\t\t\t});\n\n\t\t\t// This is here incase any errors occur\n\t\t\tlog.on('error', (err) => { throw err; }); // bubble up\n\t\t}\n\t},\n\n\tpayload(req, res) {\n\t\tif (req.method === 'POST') {\n\t\t\tlet jsonPayload = '';\n\t\t\treq.on('data', (chunk) => { jsonPayload += chunk; }); // chunk gets coerced to string\n\t\t\treq.on('end', () => { \n\t\t\t\tlatestData = JSON.parse(jsonPayload);\n\t\t\t\tres.writeHead(200, \"OK\", {'Content-Type': 'text/plain'});\n\t\t\t\tres.end();\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tres.writeHead(200, \"OK\", {'Content-Type': 'text/plain'});\n\t\t\tres.end();\n\t\t}\n\t},\n\n\tdata(req, res) {\n\t\tres.writeHead(200, \"OK\", {'Content-Type': 'text/plain'});\n\t\tres.end(JSON.stringify(latestData));\n\t},\n\n\tnotFound(req, res) {\n\t\tres.writeHead(404, {\"Content-Type\": \"text/plain\"});\n\t\tres.end('404 not found');\n\t}\n};\n\n\nhttp.createServer((req, res) => {\n\n\t// A simple router\n\tconst route = url.parse(req.url).pathname.substr(1); // get the pathname, minus the beginning '/'\n\n\tif (routes.hasOwnProperty(route)) {\n\t\troutes[route](req, res);\n\t}\n\telse {\n\t\troutes.notFound(req, res);\n\t}\n\t// try {\n\t// \troutes[route](req, res);\n\t// } catch (e) {\n\t// \tif (e instanceof TypeError) {\n\t// \t\troutes.notFound(req, res);\n\t// \t}\n\t// \telse {\n\t// \t\tthrow e; // bubble up to crash\n\t// \t}\n\t// }\n\n}).listen(parseInt(port, 10));\n\nconsole.log(\"Server running at\\n  => http://localhost:\" + port + \"/\\nCTRL + C to shutdown\");\n"]}